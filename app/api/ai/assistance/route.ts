import { NextResponse } from 'next/server'
import { GoogleGenerativeAI } from '@google/generative-ai'

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY!)

// ============================================
// SYST√àME DE PROMPTS DYNAMIQUES CONTEXTUELS
// ============================================
function generateContextualGuidancePrompt(section: string, field: string, context: any): string {
  const { productName, category, description } = context
  
  // Template de base pour tous les prompts contextuels
  const baseContext = `
    Tu es un expert en analyse de produits e-commerce sp√©cialis√© dans le march√© canadien.
    
    CONTEXTE PRODUIT:
    - Nom: "${productName || 'produit non d√©fini'}"
    - Cat√©gorie: "${category || 'cat√©gorie non d√©finie'}"
    - Description: "${description || 'description non disponible'}"
    
    OBJECTIF: Fournir une aide personnalis√©e, actionnable et pr√©cise pour le champ "${field}" de la section "${section}".
    
    STYLE DE R√âPONSE:
    - Ton direct et professionnel comme un consultant expert
    - Instructions √©tape par √©tape tr√®s concr√®tes
    - Utilise les informations du produit pour personnaliser tes conseils
    - Format: Action Guid√©e avec des √©tapes num√©rot√©es
    - Maximum 200 mots, focalis√© sur l'action
  `

  // Prompts sp√©cialis√©s par section/champ
  switch (`${section}-${field}`) {
    // SECTION ESSENTIAL
    case 'essential-productName':
      return `${baseContext}
      
      üí° AIDE PERSONNALIS√âE - Optimisation du nom de produit
      
      Bas√© sur "${productName}" dans la cat√©gorie "${category}", voici des conseils sp√©cifiques:
      
      Action Guid√©e:
      1. V√©rifie que ton nom contient le b√©n√©fice principal (ex: "correcteur", "automatique", "intelligent")
      2. Teste ces variantes: "${productName || '[NomProduit]'} Pro", "${productName || '[NomProduit]'} Expert", "${productName || '[NomProduit]'} Premium"
      3. Recherche sur Amazon.ca: tape "${productName}" et note les noms similaires dans les 5 premiers r√©sultats
      4. √âvite les noms trop g√©n√©riques - ajoute un √©l√©ment unique qui diff√©rencie
      
      üéØ Pour ${category}: privil√©gie les mots qui √©voquent la solution/transformation rather que la description technique.`
      
    case 'essential-sourcing':
      return `${baseContext}
      
      üîç AIDE PERSONNALIS√âE - Recherche fournisseur pour "${productName}"
      
      Action Guid√©e sp√©cifique √† votre produit:
      1. Ouvre Alibaba.com et tape exactement ces termes: "${productName?.toLowerCase().replace(/\s+/g, ' ')}", puis "${category?.toLowerCase()} supplier"
      2. Applique ces filtres:
         - Trade Assurance: OUI
         - Supplier Assessment: 4+ √©toiles  
         - Years in Industry: 5+ ans
      3. Cherche ces certifications selon votre cat√©gorie ${category}: CE, FDA, RoHS
      4. Contacte 3-5 fournisseurs avec ce message type: "Hello, interested in ${productName} for Canadian market. Please send: MOQ, pricing for 100/500/1000 units, lead time, and quality certificates."
      
      üí° Astuce cat√©gorie ${category}: Focus sur les fournisseurs avec exp√©rience export Canada/US.`

    // SECTION MARKET-TREND  
    case 'market-trend-googleTrends':
      return `${baseContext}
      
      üìà AIDE PERSONNALIS√âE - Analyse Google Trends pour "${productName}"
      
      Action Guid√©e:
      1. Va sur trends.google.com
      2. Tape exactement ces termes UN PAR UN:
         - "${productName}"
         - Mots-cl√©s d√©riv√©s pour ${category}: [g√©n√®re 2-3 termes bas√©s sur le nom/cat√©gorie]
      3. R√©glages obligatoires:
         - R√©gion: Canada 
         - P√©riode: 12 derniers mois
         - Cat√©gorie: ${category}
      4. Note la moyenne des pics (si >40 = bon signe, >60 = excellent)
      5. V√©rifie les "Requ√™tes associ√©es" pour d√©couvrir d'autres variantes populaires
      
      üéØ Pour "${productName}" cherche sp√©cialement les tendances autour de [mots-cl√©s saisonniers bas√©s sur la cat√©gorie].`

    // SECTION COMPETITION
    case 'competition-competitionLevel':
      return `${baseContext}
      
      üéØ AIDE PERSONNALIS√âE - Analyse concurrentielle "${productName}"
      
      Action Guid√©e:
      1. Recherche Amazon.ca: tape "${productName}" exactement
      2. Compte les produits similaires dans les 2 premi√®res pages (40 r√©sultats)
      3. Note ces m√©triques pour les 5 premiers:
         - Prix moyen
         - Nombre d'avis
         - Rating moyen
      4. Recherche Google: "${productName} Canada" + "acheter"
      5. √âchelle de concurrence:
         - <10 concurrents = Faible (Score: 4-5)
         - 10-25 = Mod√©r√©e (Score: 3)  
         - >25 = √âlev√©e (Score: 1-2)
      
      üí° Pour ${category}: les march√©s avec beaucoup de variations de produits = concurrence saine, pas forc√©ment n√©gative.`

    // SECTION PRICING
    case 'pricing-unitPrice':
      return `${baseContext}
      
      üí∞ AIDE PERSONNALIS√âE - Prix unitaire optimal "${productName}"
      
      Action Guid√©e:
      1. Recherche Alibaba: tape "${productName}" 
      2. Note les prix MOQ 100, 500, 1000 unit√©s des 5 premiers fournisseurs
      3. Calcule la moyenne et ajoute 15% (frais import/douane Canada)
      4. Pour ${category}, marge recommand√©e: [donne pourcentage bas√© sur cat√©gorie]
      5. Prix final sugg√©r√©: [Prix Alibaba] √ó 1.15 √ó [Multiplicateur cat√©gorie]
      
      üéØ R√©f√©rence march√© ${category}: v√©rifie que ton prix final reste dans le range [fourchette de prix typique pour cette cat√©gorie] pour √™tre comp√©titif au Canada.`

    case 'pricing-shipping':
      return `${baseContext}
      
      üö¢ AIDE PERSONNALIS√âE - Co√ªts d'exp√©dition pour "${productName}"
      
      Action Guid√©e:
      1. Estime le poids de ton produit ${category} (consulte des produits similaires)
      2. Va sur le site d'un transitaire (ex: Freightos.com)
      3. Simule exp√©dition Chine ‚Üí Canada pour ce poids
      4. Compare: Sea freight (20-40 jours, moins cher) vs Air freight (3-7 jours, plus cher)
      5. Ajoute 10-15% pour frais de d√©douanement
      
      üí° Pour ${category}: privil√©gie l'exp√©dition maritime si pas urgent, divise par quantit√© command√©e pour obtenir le co√ªt unitaire.`

    case 'pricing-branding':
      return `${baseContext}
      
      üé® AIDE PERSONNALIS√âE - Co√ªts de branding pour "${productName}"
      
      Action Guid√©e:
      1. Logo personnalis√©: demande √† ton fournisseur les co√ªts de gravure/impression
      2. Packaging custom: g√©n√©ralement 0.20-2.00 CAD par unit√© selon complexit√©
      3. Pour ${category}: v√©rifie si l'√©tiquetage fran√ßais est obligatoire (souvent oui au Canada)
      4. Calcule: (Co√ªt setup logo + co√ªt packaging par unit√©) = co√ªt branding unitaire
      
      üéØ Astuce: n√©gocie le co√ªt de setup du logo si tu commandes plus de 500 unit√©s.`

    case 'pricing-sellingPrice':
      return `${baseContext}
      
      üíµ AIDE PERSONNALIS√âE - Prix de vente optimal pour "${productName}"
      
      Bas√© sur tes co√ªts actuels, voici ta strat√©gie:
      
      Action Guid√©e:
      1. Applique la r√®gle des marges ${category}: minimum 60% pour produits physiques
      2. V√©rifie les prix concurrents sur Amazon.ca en tapant "${productName}"
      3. Positionne-toi: Premium (+20% vs concurrence), Standard (prix moyen), ou √âconomique (-15%)
      4. Teste prix psychologiques: 39.99 vs 40.00 (impact majeur sur conversions)
      
      üéØ Pour ${category} au Canada: sweet spot g√©n√©ralement entre [fourchette de prix recommand√©e].`

    case 'pricing-competitorPrices':
      return `${baseContext}
      
      üîç AIDE PERSONNALIS√âE - Analyse prix concurrents "${productName}"
      
      Action Guid√©e:
      1. Amazon.ca: tape "${productName}" et note les 5 premiers prix
      2. Google Shopping Canada: cherche "${productName} Canada"
      3. Shopify stores: tape "${productName}" site:shopify.com
      4. Walmart.ca et Costco.ca: v√©rifie s'ils vendent des produits similaires
      5. Calcule la moyenne et identifie le prix le plus bas/haut
      
      üí° Ignore les prix aberrants (tr√®s bas = qualit√© douteuse, tr√®s haut = luxe premium).`

    // SECTION QUALITATIVE
    case 'qualitative-wowFactor':
      return `${baseContext}
      
      ‚ú® AIDE PERSONNALIS√âE - Facteur WOW de "${productName}"
      
      √âvalue objectivement ton produit:
      
      Action Guid√©e:
      1. Montre une photo/description √† 5 personnes: notent-elles une r√©action imm√©diate ?
      2. Demande-toi: "Est-ce que je dirais WOW en voyant ce produit pour la premi√®re fois ?"
      3. Compare √† des innovations r√©centes en ${category}: ton produit surprend-t-il autant ?
      4. Test r√©seaux sociaux: publie une image et mesure l'engagement (likes, commentaires)
      
      üí° Score 5: r√©volutionnaire, Score 3: tr√®s int√©ressant, Score 1: basique mais utile.`

    case 'qualitative-simplicity':
      return `${baseContext}
      
      üéØ AIDE PERSONNALIS√âE - Simplicit√© de "${productName}"
      
      Test de clart√© imm√©diate:
      
      Action Guid√©e:
      1. √âcris en 1 phrase ce que fait ton produit
      2. Fais le test des 10 secondes: quelqu'un comprend-il l'usage en 10 sec ?
      3. Pour ${category}: √©vite le jargon technique, privil√©gie les b√©n√©fices simples
      4. Test grand-m√®re: ta grand-m√®re comprendrait-elle √† quoi √ßa sert ?
      
      üéØ Plus c'est simple √† expliquer, plus c'est facile √† vendre !`

    case 'qualitative-easeOfUse':
      return `${baseContext}
      
      üîß AIDE PERSONNALIS√âE - Facilit√© d'utilisation "${productName}"
      
      √âvaluation praticit√©:
      
      Action Guid√©e:
      1. Compte les √©tapes n√©cessaires pour utiliser ton produit
      2. Y a-t-il besoin d'un manuel ? (Si oui, score automatiquement ‚â§ 3)
      3. Pour ${category}: compare avec les leaders du march√© en simplicit√©
      4. Test utilisateur: fais tester √† quelqu'un sans explication pr√©alable
      
      üí° Objectif: utilisable imm√©diatement sans formation = Score 5.`

    case 'qualitative-beforeAfterPotential':
      return `${baseContext}
      
      üì∏ AIDE PERSONNALIS√âE - Potentiel avant/apr√®s "${productName}"
      
      Test de transformation visible:
      
      Action Guid√©e:
      1. Peux-tu prendre 2 photos: avant et apr√®s utilisation du produit ?
      2. La diff√©rence est-elle visible et impressionnante ?
      3. Pour ${category}: identifie les transformations possibles (physiques, esth√©tiques, pratiques)
      4. Cherche sur Instagram/TikTok: y a-t-il des posts avant/apr√®s pour des produits similaires ?
      
      üéØ Plus la transformation est visible, plus le potentiel viral est √©lev√© !`

    case 'qualitative-solvesProblem':
      return `${baseContext}
      
      üí° AIDE PERSONNALIS√âE - R√©solution de probl√®me "${productName}"
      
      Validation du probl√®me:
      
      Action Guid√©e:
      1. D√©finis le probl√®me exact que r√©sout ton produit en 1 phrase
      2. Ce probl√®me arrive-t-il souvent ? (quotidien = excellent, rare = mauvais)
      3. Pour ${category}: identifie les frustrations communes de ta cible
      4. Test valid√©: 8/10 personnes de ta cible confirment-elles avoir ce probl√®me ?
      
      üéØ Sans vrai probl√®me, pas de vraies ventes !`

    case 'qualitative-isInnovative':
      return `${baseContext}
      
      üöÄ AIDE PERSONNALIS√âE - Innovation de "${productName}"
      
      Test d'innovation:
      
      Action Guid√©e:
      1. Compare aux 5 leaders actuels en ${category}: qu'apportes-tu de nouveau ?
      2. Innovation peut √™tre: technologique, design, prix, exp√©rience utilisateur
      3. Recherche brevets: ton innovation existe-t-elle d√©j√† ?
      4. Test march√©: peux-tu dire "le premier X qui fait Y" ?
      
      üí° L'innovation n'est pas obligatoire, mais elle aide √† percer plus facilement.`

    // SECTION LOGISTICS
    case 'logistics-fragile':
      return `${baseContext}
      
      üì¶ AIDE PERSONNALIS√âE - Fragilit√© "${productName}"
      
      √âvaluation robustesse:
      
      Action Guid√©e:
      1. Mat√©riaux: verre, plastique fin, √©lectronique = potentiellement fragile
      2. Test chute: r√©siste-t-il √† une chute de 1 m√®tre ?
      3. Pour ${category}: v√©rifie les standards de r√©sistance du secteur
      4. Impact shipping: fragile = emballage renforc√© = co√ªts +30-50%
      
      üéØ Fragile = plus de retours, plus de SAV, emballage premium requis.`

    case 'logistics-variants':
      return `${baseContext}
      
      üé® AIDE PERSONNALIS√âE - Variantes "${productName}"
      
      Strat√©gie variantes:
      
      Action Guid√©e:
      1. Analyse les concurrents: quelles variantes proposent-ils ?
      2. Pour ${category}: couleurs populaires, tailles standards, mod√®les demand√©s
      3. Start simple: 2-3 variantes max pour commencer
      4. √âvite: trop de choix = paralysie d'achat (paradox of choice)
      
      üí° Chaque variante = stock s√©par√© √† g√©rer, commence minimal et expand selon la demande.`

    // SECTION SOCIAL-PROOF
    case 'social-proof-socialProofStrength':
      return `${baseContext}
      
      üë• AIDE PERSONNALIS√âE - Force preuve sociale "${productName}"
      
      √âvaluation r√©aliste:
      
      Action Guid√©e:
      1. Recherche TikTok/Instagram: hashtag "${productName.toLowerCase()}" ou mots-cl√©s
      2. Compte les posts organiques (non sponsoris√©s) des 30 derniers jours
      3. Pour ${category}: compare avec des produits √† succ√®s du secteur
      4. V√©rifie YouTube: y a-t-il des reviews/unboxings ind√©pendants ?
      
      üéØ Sois honn√™te: pas de preuve sociale = start from scratch, c'est normal pour un nouveau produit.`

    case 'social-proof-avgReviews':
      return `${baseContext}
      
      üí¨ AIDE PERSONNALIS√âE - Moyenne avis concurrents "${productName}"
      
      Benchmark concurrentiel:
      
      Action Guid√©e:
      1. Amazon.ca: tape "${productName}" et note le nombre d'avis des 5 premiers r√©sultats
      2. Calcule la moyenne: (avis1 + avis2 + avis3 + avis4 + avis5) √∑ 5
      3. Pour ${category}: identifie les patterns (nouveaux produits vs √©tablis)
      4. Note aussi les notes moyennes (/5 √©toiles)
      
      üí° Cette donn√©e t'aide √† estimer combien d'avis tu devras g√©n√©rer pour √™tre cr√©dible.`

    // SECTION FINANCIAL
    case 'financial-marketGrowth':
      return `${baseContext}
      
      üìà AIDE PERSONNALIS√âE - Croissance march√© "${productName}"
      
      Recherche tendances secteur:
      
      Action Guid√©e:
      1. Google: "${category} market growth Canada 2024"
      2. Statistique Canada: recherche donn√©es secteur ${category}
      3. Amazon trends: observe si les ventes ${category} augmentent
      4. Google Trends: tendance 5 ans pour mots-cl√©s ${category}
      
      üéØ March√© en croissance = vent en poupe, march√© stable = plus difficile de percer.`

    case 'financial-legalBarriers':
      return `${baseContext}
      
      ‚öñÔ∏è AIDE PERSONNALIS√âE - Barri√®res l√©gales "${productName}"
      
      Check r√©glementaire Canada:
      
      Action Guid√©e:
      1. Site Health Canada: v√©rifie si ${category} n√©cessite des certifications
      2. Pour ${category}: recherche "import ${category} Canada requirements"
      3. √âtiquetage: fran√ßais obligatoire ? Informations nutritionnelles ?
      4. Certifications: CE, FDA, FCC selon ton produit
      
      üéØ Mieux vaut d√©couvrir les contraintes AVANT de commander ton stock !`

    // Default pour autres combinaisons
    default:
      return `${baseContext}
      
      ü§ñ AIDE CONTEXTUELLE - ${field}
      
      Bas√© sur votre produit "${productName}" (${category}):
      
      Action Recommand√©e:
      1. [√âtape sp√©cifique bas√©e sur les donn√©es du produit]
      2. [Action concr√®te utilisant le nom/cat√©gorie]
      3. [Conseil optimis√© pour le march√© canadien]
      
      üí° Pour cette cat√©gorie ${category}: [conseil sp√©cifique √† la cat√©gorie]
      
      Avez-vous besoin d'aide plus sp√©cifique sur cet aspect ?`
  }
}

export async function POST(request: Request) {
  let section: string = '', field: string = '', context: any = {}
  try {
    const requestData = await request.json()
    section = requestData.section
    field = requestData.field
    context = requestData.context
    const requestType = requestData.requestType || 'contextual_guidance'
    
    if (!process.env.GEMINI_API_KEY) {
      return NextResponse.json(
        { error: 'API Gemini non configur√©e' },
        { status: 500 }
      )
    }

    const model = genAI.getGenerativeModel({ model: 'gemini-1.5-flash' })
    
    let prompt = ''
    
    // Nouveau syst√®me de prompts dynamiques contextuels
    if (requestType === 'contextual_guidance') {
      prompt = generateContextualGuidancePrompt(section, field, context)
    } else {
      // Fallback vers l'ancien syst√®me
      switch (section) {
        case 'essential':
          prompt = generateEssentialPrompt(field, context)
          break
        case 'pricing':
          prompt = generatePricingPrompt(field, context)
          break
        case 'market-trend':
          prompt = generateMarketTrendPrompt(field, context)
          break
        case 'qualitative':
          prompt = generateQualitativePrompt(field, context)
          break
        case 'competition':
          prompt = generateCompetitionPrompt(field, context)
          break
        case 'social-proof':
          prompt = generateSocialProofPrompt(field, context)
          break
        case 'financial':
          prompt = generateFinancialPrompt(field, context)
          break
        default:
          return NextResponse.json(
            { error: 'Section non reconnue' },
            { status: 400 }
          )
      }
    }

    const result = await model.generateContent(prompt)
    const response = await result.response
    const assistance = response.text()

    return NextResponse.json({
      assistance,
      section,
      field,
      context: {
        productName: context.productName,
        category: context.category
      }
    })
  } catch (error) {
    console.error('Error generating AI assistance:', error)
    
    // Handle Gemini API overload gracefully
    if ((error as any).message?.includes('overloaded') || (error as any).status === 503) {
      return NextResponse.json({
        assistance: getFallbackAssistance(section, field, context),
        section,
        field,
        isFromFallback: true,
        context: {
          productName: context.productName,
          category: context.category
        }
      })
    }
    
    return NextResponse.json(
      { error: 'Erreur lors de la g√©n√©ration de l\'assistance' },
      { status: 500 }
    )
  }
}

// Fallback assistance when Gemini is overloaded
function getFallbackAssistance(section: string, field: string, context: any): string {
  const { productName, category } = context
  
  switch (`${section}-${field}`) {
    case 'essential-productName':
      return `üí° AIDE RAPIDE - Nom de produit
      
      Pour "${productName || 'votre produit'}" en ${category || 'votre cat√©gorie'}:
      
      ‚úÖ Checklist nom efficace:
      1. Inclut le b√©n√©fice principal (ex: "correcteur", "intelligent")
      2. √âvite les mots trop techniques
      3. Facile √† prononcer et m√©moriser
      4. Unique dans votre niche
      
      üéØ Testez sur Amazon.ca pour v√©rifier la concurrence !`
      
    case 'essential-sourcing':
      return `üîç AIDE RAPIDE - Sourcing fournisseur
      
      Pour trouver "${productName || 'votre produit'}":
      
      ‚úÖ √âtapes de base:
      1. Alibaba.com ‚Üí Recherchez votre produit
      2. Filtrez: Trade Assurance OUI
      3. Minimum 4+ √©toiles fournisseur
      4. Demandez √©chantillons avant commande
      
      üí° API temporairement surcharg√©e - aide basique fournie.`
      
    default:
      return `ü§ñ AIDE RAPIDE - ${field}
      
      L'assistance IA d√©taill√©e est temporairement indisponible (serveur surcharg√©).
      
      ‚úÖ Conseils g√©n√©raux:
      1. Recherchez des exemples similaires en ligne
      2. Analysez vos concurrents directs
      3. Testez avec votre audience cible
      
      üîÑ R√©essayez dans quelques minutes pour une aide personnalis√©e !`
  }
}

function generateEssentialPrompt(field: string, context: any): string {
  const { productName, category } = context
  
  switch (field) {
    case 'productName':
      return `Sugg√®re 3 noms de produits alternatifs pour un produit dans la cat√©gorie "${category}". Les noms doivent √™tre:
      - Accrocheurs et m√©morables
      - Optimis√©s pour le march√© canadien
      - Faciles √† prononcer
      - √âvocateurs du b√©n√©fice principal
      
      Format: Liste num√©rot√©e avec explication courte pour chaque nom.`
      
    case 'description':
      return `Am√©liore cette description de produit pour la cat√©gorie "${category}":
      Produit: ${productName}
      
      La description doit √™tre:
      - Orient√©e b√©n√©fices plut√¥t que caract√©ristiques
      - Optimis√©e SEO avec mots-cl√©s naturels
      - Persuasive pour le march√© canadien
      - Maximum 100 mots
      
      √âcris une description accrocheuse qui donne envie d'acheter.`
      
    case 'category':
      return `Analyse ce produit "${productName}" et sugg√®re la cat√©gorie la plus pertinente parmi:
      - Kitchen (cuisine)
      - Fitness (sport/fitness)
      - Beauty (beaut√©/soins)
      - Technology (tech/gadgets)
      - Home (maison/d√©coration)
      - Fashion (mode/accessoires)
      
      Justifie ton choix en 2-3 phrases.`
      
    case 'sourcing':
      return `Pour un produit "${productName}" dans la cat√©gorie "${category}", sugg√®re:
      1. 5 mots-cl√©s de recherche pr√©cis pour Alibaba
      2. 3 filtres recommand√©s (MOQ, prix, certifications)
      3. 2 crit√®res de s√©lection de fournisseurs fiables
      
      Concentre-toi sur des fournisseurs qualifi√©s pour l'export vers le Canada.`
      
    default:
      return `Fournis une suggestion pertinente pour le champ "${field}" du produit "${productName}".`
  }
}

function generatePricingPrompt(field: string, context: any): string {
  const { productName, category, unitPrice, desiredSellingPrice } = context
  
  switch (field) {
    case 'unitPrice':
      return `Pour un produit "${productName}" cat√©gorie "${category}", estime une fourchette de prix unitaire r√©aliste en analysant:
      - Co√ªts de production typiques pour cette cat√©gorie
      - Marges standards du secteur
      - Qualit√© attendue par le march√© canadien
      
      Donne une fourchette min-max avec justification.`
      
    case 'shipping':
      return `Estime les co√ªts d'exp√©dition Chine ‚Üí Canada pour "${productName}":
      - Poids estim√© du produit
      - Dimensions approximatives
      - M√©thodes d'exp√©dition recommand√©es
      - Co√ªt par unit√© selon les quantit√©s
      
      Inclus des conseils pour optimiser les co√ªts logistiques.`
      
    case 'sellingPrice':
      return `Calcule un prix de vente optimal pour "${productName}" sachant:
      - Prix unitaire: ${unitPrice}‚Ç¨
      - Cat√©gorie: ${category}
      - March√©: Canada
      
      Analyse:
      1. Marge recommand√©e pour cette cat√©gorie
      2. Prix psychologique optimal
      3. Positionnement concurrentiel
      4. √âlasticit√© prix attendue
      
      Justifie le prix sugg√©r√©.`
      
    default:
      return `Analyse le pricing pour "${field}" du produit "${productName}".`
  }
}

function generateMarketTrendPrompt(field: string, context: any): string {
  const { productName, category } = context
  
  switch (field) {
    case 'googleTrends':
      return `Pour analyser "${productName}" sur Google Trends, sugg√®re:
      1. 5 mots-cl√©s principaux √† rechercher
      2. 3 mots-cl√©s de longue tra√Æne
      3. Filtres g√©ographiques pour le Canada
      4. P√©riode d'analyse recommand√©e
      
      Explique comment interpr√©ter les r√©sultats pour cette cat√©gorie "${category}".`
      
    case 'searchVolume':
      return `√âvalue le potentiel de recherche pour "${productName}" (${category}):
      - Volume de recherche mensuel estim√© au Canada
      - Variantes de mots-cl√©s √† analyser
      - Outils recommand√©s (gratuits et payants)
      - Saisonnalit√© attendue
      
      Donne des benchmarks pour cette cat√©gorie.`
      
    case 'seasonality':
      return `Analyse la saisonnalit√© pour "${productName}" (${category}):
      - P√©riodes de forte/faible demande
      - Facteurs saisonniers au Canada
      - Impact sur la strat√©gie d'inventaire
      - Opportunit√©s marketing saisonni√®res
      
      Base ton analyse sur le comportement canadien.`
      
    case 'socialMedia':
      return `Strat√©gie r√©seaux sociaux pour "${productName}" (${category}):
      1. Plateformes prioritaires au Canada
      2. Hashtags pertinents (10 suggestions)
      3. Types de contenu viral pour cette cat√©gorie
      4. Influenceurs/cr√©ateurs √† cibler
      
      Inclus des exemples de posts engageants.`
      
    default:
      return `Analyse des tendances march√© pour "${field}" du produit "${productName}".`
  }
}

function generateQualitativePrompt(field: string, context: any): string {
  const { productName, category } = context
  
  return `√âvalue objectivement "${productName}" (${category}) pour le crit√®re "${field}":
  
  Fournis:
  1. Une note de 1 √† 5 avec justification
  2. 3 points forts
  3. 2 points d'am√©lioration
  4. Benchmark avec des produits similaires
  5. Conseils pour am√©liorer ce crit√®re
  
  Sois objectif et constructif dans ton √©valuation.`
}

function generateCompetitionPrompt(field: string, context: any): string {
  const { productName, category } = context
  
  switch (field) {
    case 'competitorCount':
      return `M√©thode pour compter les concurrents de "${productName}" (${category}):
      1. Requ√™tes de recherche sp√©cifiques
      2. Plateformes √† analyser (Amazon.ca, Google, Shopify)
      3. Crit√®res de d√©finition "concurrent direct"
      4. Outils d'analyse concurrentielle
      
      Donne une m√©thodologie √©tape par √©tape.`
      
    case 'competitorAnalysis':
      return `Analyse concurrentielle pour "${productName}" (${category}):
      1. Crit√®res d'√©valuation des concurrents
      2. Signaux de performance √† surveiller
      3. Forces/faiblesses typiques du secteur
      4. Opportunit√©s de diff√©renciation
      
      Inclus une checklist d'analyse.`
      
    case 'competitorAds':
      return `Analyse publicitaire concurrentielle pour "${productName}":
      1. Comment utiliser la Meta Ads Library
      2. Indicateurs cl√©s √† surveiller
      3. Angles marketing populaires dans "${category}"
      4. Budgets publicitaires estim√©s
      
      Donne des conseils d'espionnage concurrentiel √©thique.`
      
    default:
      return `Analyse concurrentielle pour "${field}" du produit "${productName}".`
  }
}

function generateSocialProofPrompt(field: string, context: any): string {
  const { productName, category } = context
  
  switch (field) {
    case 'reviewAnalysis':
      return `Analyse des avis pour "${productName}" (${category}):
      1. O√π chercher des avis pertinents
      2. M√©triques importantes √† calculer
      3. Signaux de qualit√© dans les avis
      4. Red flags √† √©viter
      
      Inclus des conseils pour interpr√©ter les patterns d'avis.`
      
    case 'engagement':
      return `Calcul du taux d'engagement pour "${productName}" (${category}):
      1. Formule exacte par plateforme
      2. Benchmarks sectoriels
      3. Facteurs d'influence
      4. Strat√©gies d'am√©lioration
      
      Donne des exemples concrets de calcul.`
      
    default:
      return `Analyse de la preuve sociale pour "${field}" du produit "${productName}".`
  }
}

function generateFinancialPrompt(field: string, context: any): string {
  const { productName, category, unitPrice, desiredSellingPrice } = context
  
  switch (field) {
    case 'grossMargin':
      return `Calcul de marge brute pour "${productName}" (${category}):
      Prix unitaire: ${unitPrice}‚Ç¨
      Prix de vente: ${desiredSellingPrice}‚Ç¨
      
      Analyse:
      1. Formule de calcul compl√®te
      2. Co√ªts cach√©s √† consid√©rer
      3. Marge optimale pour cette cat√©gorie
      4. Strat√©gies d'optimisation
      
      Inclus un exemple d√©taill√©.`
      
    case 'breakEven':
      return `Calcul du seuil de rentabilit√© pour "${productName}":
      1. M√©thode de calcul
      2. Co√ªts fixes √† consid√©rer
      3. Variables d'ajustement
      4. Sc√©narios optimiste/pessimiste
      
      Donne des conseils pour atteindre le seuil rapidement.`
      
    case 'legalBarriers':
      return `R√©glementations pour "${productName}" (${category}) au Canada:
      1. Certifications obligatoires
      2. Normes de s√©curit√©
      3. √âtiquetage requis
      4. Restrictions d'importation
      5. Co√ªts de conformit√©
      
      Inclus les organismes de r√©f√©rence.`
      
    default:
      return `Analyse financi√®re pour "${field}" du produit "${productName}".`
  }
}